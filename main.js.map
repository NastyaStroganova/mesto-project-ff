{"version":3,"file":"main.js","mappings":"mBAAA,IAAMA,EAAeC,SAASC,cAAc,kBAAkBC,QAEvD,SAASC,EAAQC,EAAUC,EAAQC,EAAcC,EAAiBC,GAEvE,IAAMC,EAAcV,EAAaE,cAAc,SAASS,WAAU,GAC5DC,EAAeF,EAAYR,cAAc,wBACzCW,EAAaH,EAAYR,cAAc,sBACvCY,EAAYJ,EAAYR,cAAc,gBACtCa,EAAaL,EAAYR,cAAc,wBA+B7C,OA7BAY,EAAUE,IAAMX,EAASY,KACzBP,EAAYR,cAAc,gBAAgBgB,YAAcb,EAASc,KACjEL,EAAUM,IAAMf,EAASc,KAEzBJ,EAAWG,YAAcb,EAASgB,MAAMC,OAExBjB,EAASgB,MAAME,KAAK,SAACC,GAAI,OAAKA,EAAKC,MAAQnB,CAAM,IAE/DO,EAAWa,UAAUC,IAAI,+BAGvBtB,EAASuB,MAAMH,MAAQnB,GACzBM,EAAaiB,SAEdjB,EAAakB,iBAAiB,QAAS,WACxCvB,EAAaF,EAASoB,IAAKf,EAC7B,GAEEG,EAAWiB,iBAAiB,QAAS,WACnCrB,EAAoBJ,EAASoB,IAAKZ,EAAYE,EAChD,GAEAD,EAAUgB,iBAAiB,QAAS,WAClCtB,EAAgB,CACdW,KAAMd,EAASc,KACfF,KAAMZ,EAASY,MAEnB,GAEOP,CACT,CCxCA,IAAMqB,EAAiB,SAACC,GACN,WAAZA,EAAIC,KAENC,EADoBjC,SAASC,cAAc,oBAG7C,EAGK,SAASgC,EAAWC,GACzBA,EAAYT,UAAUG,OAAO,mBAC7B5B,SAASmC,oBAAoB,UAAWL,EAC1C,CAGO,SAASM,EAAUF,GACxBA,EAAYT,UAAUC,IAAI,mBAC1B1B,SAAS6B,iBAAiB,UAAWC,EACvC,CAGO,ICbDO,EAAiB,SAACC,EAAaC,EAAcC,GAEjD,IAAMC,EAAeH,EAAYrC,cAAc,IAADyC,OAAKH,EAAaI,GAAE,WAClEJ,EAAad,UAAUG,OAAOY,EAAiBI,iBAC/CH,EAAahB,UAAUG,OAAOY,EAAiBK,YAC/CJ,EAAaxB,YAAc,EAC7B,EA6BM6B,EAAoB,SAACC,EAAWC,EAAeR,IAX7B,SAACO,GAEvB,OAAOA,EAAUzB,KAAK,SAACiB,GAKrB,OAAQA,EAAaU,SAASC,KAChC,EACF,CAIMC,CAAgBJ,IAMlBC,EAAcI,UAAW,EACzBJ,EAAcvB,UAAUG,OAAOY,EAAiBa,uBALhDL,EAAcI,UAAW,EACzBJ,EAAcvB,UAAUC,IAAIc,EAAiBa,qBAMjD,EA0BaC,EAAkB,SAAChB,EAAaE,GAC3C,IAAMO,EAAYQ,MAAMC,KAAKlB,EAAYmB,iBAAiBjB,EAAiBkB,gBACrEV,EAAgBV,EAAYrC,cAAcuC,EAAiBmB,sBAEjEZ,EAAUa,QAAQ,SAACrB,GACjBF,EAAeC,EAAaC,EAAcC,EAC5C,GAEAQ,EAAcI,UAAW,EACzBJ,EAAcvB,UAAUC,IAAIc,EAAiBa,oBAC/C,ECxFMQ,EAAS,CACbC,QAAS,4CACTC,QAAS,CACPC,cAAe,uCACf,eAAgB,qBAIpB,SAASC,EAAcC,GACrB,OAAIA,EAAIC,GACAD,EAAIE,OAEJF,EAAIE,OACRC,KAAK,SAACC,GAEJ,OADAA,EAAMC,iBAAmBL,EAAIM,OACtBC,QAAQC,OAAOJ,EACzB,EACF,C,sGCHH,IAAMK,EAAY3E,SAASC,cAAc,iBAGnC2E,EAFO5E,SAASC,cAAc,kBACfA,cAAc,YACXA,cAAc,YAChC4E,EAAcD,EAAQ3E,cAAc,kBACpC6E,EAAaD,EAAY5E,cAAc,yBACvC8E,EAAY/E,SAASC,cAAc,oBACnC+E,EAAehF,SAASC,cAAc,wBACtCgF,EAAYL,EAAQ3E,cAAc,wBAClCiF,EAAalF,SAASC,cAAc,qBACpCkF,EAAmBD,EAAWjF,cAAc,iBAC5CmF,EAAoBF,EAAWjF,cAAc,mBAC7CoF,EAAcrF,SAASsF,MAAM,gBAC7BC,EAAuBF,EAAYG,SAAe,KAClDC,EAA8BJ,EAAYG,SAAsB,YAChEE,EAAeb,EAAY5E,cAAc,mBACzC0F,EAAqBd,EAAY5E,cAAc,yBAC/C2F,EAAiB5F,SAASsF,MAAM,aAChCO,EAA+BD,EAAeJ,SAAS,cACvDM,EAA0BF,EAAeJ,SAAe,KACxDO,EJO6C,SAACC,EAAQpF,EAAYE,IGuB7C,SAACmF,EAAQC,GAClC,OAAOC,MAAM,GAADzD,OAAImB,EAAOC,QAAO,iBAAApB,OAAgBuD,GAAU,CACtDG,OAAQF,EAAU,MAAQ,SAC1BnC,QAASF,EAAOE,UAEjBM,KAAKJ,EACR,EH3BEoC,CAAWL,GADKpF,EAAWa,UAAU6E,SAAS,gCAE3CjC,KAAK,SAACjE,GACLQ,EAAWa,UAAU8E,OAAO,+BAC5BzF,EAAWG,YAAcb,EAASgB,MAAMC,MAC1C,GACCmF,MAAM,SAACC,GAAG,OAAKC,QAAQC,IAAI,mCAADjE,OAAoC+D,GAAM,EACzE,EIdMG,EAAc5G,SAASC,cAAc,sBAErC4G,GADmB7G,SAASC,cAAc,+BAC7BD,SAASsF,MAAM,gBAC5BwB,EAAcD,EAAWrB,SAAS,eAClCuB,EAAgB/G,SAASC,cAAc,mBAEvC+G,GADkBhH,SAASC,cAAc,2BACjBoF,EAAYpF,cAAc,mBAClDgH,EAA2BrB,EAAe3F,cAAc,kBACxDiH,EAAuBL,EAAW5G,cAAc,kBAEtD,SAASM,EAAe4G,GAAiB,IAAdjG,EAAIiG,EAAJjG,KAAMF,EAAImG,EAAJnG,KAC/BmE,EAAiBpE,IAAMC,EACvBmE,EAAiBhE,IAAMD,EACvBkE,EAAkBnE,YAAcC,EAChCkB,EAAU8C,EACZ,CAEA,IFkBiC1C,EElB3BlC,EAAe,SAAC2F,EAAQxF,IDoBJ,SAACwF,GACzB,OAAOE,MAAM,GAADzD,OAAImB,EAAOC,QAAO,WAAApB,OAAUuD,GAAU,CAChDG,OAAQ,SACRrC,QAASF,EAAOE,UAEjBM,KAAKJ,GACLI,KAAK,SAAC+C,GACN,OAAOA,CACR,EACF,EC5BEC,CAAWpB,GACR5B,KAAK,WACJ5D,EAAYmB,QACd,GACC4E,MAAM,SAACC,GACNC,QAAQC,IAAI,+BAAgCF,EAC9C,EACJ,EA6CA3B,EAAWjD,iBAAiB,QAAS,WAEnC0D,EAAqB+B,MAAQ5B,EAAazE,YAC1CwE,EAA4B6B,MAAQ3B,EAAmB1E,YACvDqC,EAAgB+B,EAAa,CAC3BkC,aAAc,eACd7D,cAAe,gBACfC,qBAAsB,iBACtBN,oBAAqB,yBACrBT,gBAAiB,0BACjBC,WAAY,yBAEdT,EAAU2C,EACZ,GAEAa,EAAe/D,iBAAiB,SArChC,SAA8BE,GAC5BA,EAAIyF,iBAEJ,IDlCwBC,EAAKvG,EAAMF,ECkC7B0G,EAAcT,EAAyBhG,YAC7CgG,EAAyBhG,YAAc,iBDnCfwG,ECqCV,CAAEvG,KAAM2E,EAA6ByB,MAAOtG,KAAM8E,EAAwBwB,ODrC3DpG,EAAIuG,EAAJvG,KAAMF,EAAIyG,EAAJzG,KAC5BmF,MAAM,GAADzD,OAAImB,EAAOC,QAAO,UAAU,CACtCsC,OAAQ,OACRrC,QAASF,EAAOE,QAChB4D,KAAMC,KAAKC,UAAU,CACrB3G,KAAMA,EACNF,KAAMA,MAGTqD,KAAKJ,IC6BDI,KAAK,SAACyD,GACL,IAAMC,EAAU5H,EAAQ2H,EAAaA,EAAYnG,MAAMH,IAAKlB,EAAcC,EAAiBwF,GAC3FpB,EAAUqD,QAAQD,GAClB9F,EAAW+C,GACXY,EAAeqC,OACjB,GACCzB,MAAM,SAACC,GACNC,QAAQC,IAAI,+BAAgCF,EAC9C,GACCyB,QAAQ,WACPjB,EAAyBhG,YAAcyG,CACzC,EACJ,GAqBAzC,EAAUpD,iBAAiB,QAAS,WAClCO,EAAU4C,GACVY,EAAeqC,QACf3E,EAAgBsC,EAAgB,CAC9B2B,aAAc,eACd7D,cAAe,gBACfC,qBAAsB,iBACtBN,oBAAqB,yBACrBT,gBAAiB,0BACjBC,WAAY,wBAEhB,GAGAwC,EAAYxD,iBAAiB,SA1E7B,SAAiCE,GAC/BA,EAAIyF,iBAEJ,ID3BwBL,EAAKjG,EAAMiH,EC2B7BT,EAAcV,EAAsB/F,YAC1C+F,EAAsB/F,YAAc,iBD5BZkG,EC8BV,CAAEjG,KAAMqE,EAAqB+B,MAAOa,MAAO1C,EAA4B6B,OD9BxDpG,EAAIiG,EAAJjG,KAAMiH,EAAKhB,EAALgB,MAC7BhC,MAAM,GAADzD,OAAImB,EAAOC,QAAO,aAAa,CAC1CsC,OAAQ,QACRrC,QAASF,EAAOE,QAChB4D,KAAMC,KAAKC,UAAU,CACnB3G,KAAMA,EACNiH,MAAOA,MAGV9D,KAAKJ,ICsBDI,KAAK,SAAC+D,GACL1C,EAAazE,YAAcmH,EAAelH,KAC1CyE,EAAmB1E,YAAcmH,EAAeD,MAChDlG,EAAW8C,EACb,GACCyB,MAAM,SAACC,GACNC,QAAQC,IAAI,+BAAgCF,EAC9C,GACCyB,QAAQ,WACPlB,EAAsB/F,YAAcyG,CACtC,EACJ,GA0DAnE,MAAMC,KAAKxD,SAASyD,iBAAiB,WAAWG,QAAQ,SAAAyE,GHxHhB,IAACC,EGyHvCD,EAAM5G,UAAUC,IAAI,uBHzHmB4G,EG0HdD,GHzHapI,cAAc,iBACnC4B,iBAAiB,QAAS,WACzCI,EAAWqG,EACb,GAGAA,EAAazG,iBAAiB,YAAa,SAACE,GACtCA,EAAIwG,OAAO9G,UAAU6E,SAAS,UAChCrE,EAAWqG,EAEf,EGgHF,GFxEiC9F,EE0EhB,CACf+E,aAAc,eACd7D,cAAe,gBACfC,qBAAsB,iBACtBN,oBAAqB,yBACrBT,gBAAiB,0BACjBC,WAAY,wBF/EKU,MAAMC,KAAKxD,SAASyD,iBAAiBjB,EAAiB+E,eACtEiB,OAAO,SAAAC,GAAI,OAAKA,EAAKC,QAAQ,0BAA0B,GAC/C9E,QAAQ,SAACtB,IAnBY,SAACA,EAAaE,GAC5C,IAAMO,EAAYQ,MAAMC,KAAKlB,EAAYmB,iBAAiBjB,EAAiBkB,gBAErEV,EAAgBV,EAAYrC,cAAcuC,EAAiBmB,sBAEjEb,EAAkBC,EAAWC,EAAeR,GAE5CO,EAAUa,QAAQ,SAACrB,GAEjBA,EAAaV,iBAAiB,QAAS,YAjD3B,SAACS,EAAaC,EAAcC,GAC1CD,EAAaoG,kBAAkB,IAC3BpG,EAAaqG,SAAWrG,EAAaU,SAAS4F,gBAChDtG,EAAaoG,kBAAkBpG,EAAauG,QAAQC,cAEpDxG,EAAaoG,kBAAkB,IAG5BpG,EAAaU,SAASC,MAGzBb,EAAeC,EAAaC,EAAcC,GA1BvB,SAACF,EAAaC,EAAcwG,EAAcvG,GAC/D,IAAMC,EAAeH,EAAYrC,cAAc,IAADyC,OAAKH,EAAaI,GAAE,WAClEJ,EAAad,UAAUC,IAAIc,EAAiBI,iBAC5CH,EAAaxB,YAAc8H,EAC3BtG,EAAahB,UAAUC,IAAIc,EAAiBK,WAC9C,CAmBImG,CAAe1G,EAAaC,EAAcA,EAAa0G,kBAAmBzG,GAI7EkE,QAAQC,IAAI,oBAAqBpE,EAAaU,SAC/C,CAoCMiG,CAAQ5G,EAAaC,EAAcC,GACnCM,EAAkBC,EAAWC,EAAeR,EAC9C,EACF,EACF,CAMI2G,CAAiB7G,EAAaE,EAChC,GE8EFuE,EAAclF,iBAAiB,QAAS,WACtCgF,EAAWoB,QACX3E,EAAgBuD,EAAY,CAC1BU,aAAc,eACd7D,cAAe,gBACfC,qBAAsB,iBACtBN,oBAAqB,yBACrBT,gBAAiB,0BACjBC,WAAY,yBAEdT,EAAUwE,EACZ,GAqBAC,EAAWhF,iBAAiB,SAnB5B,SAA4BE,GAC1BA,EAAIyF,iBAEJ,IDtF2B4B,ECsFrB1B,EAAcR,EAAqBjG,YACzCiG,EAAqBjG,YAAc,iBDvFRmI,ECyFdtC,EAAYQ,MDxFlBnB,MAAM,GAADzD,OAAImB,EAAOC,QAAO,oBAAoB,CAChDsC,OAAQ,QACRrC,QAASF,EAAOE,QAChB4D,KAAMC,KAAKC,UAAU,CACnBwB,OAAQD,MAGX/E,KAAKJ,ICkFHI,KAAK,SAACiF,GACLvC,EAAcwC,MAAMC,gBAAkB,QAAH9G,OAAW4G,EAASD,OAAM,MAC7DpH,EAAW2E,EACb,GACCJ,MAAM,SAAAC,GACLC,QAAQpC,MAAM,6BAA8BmC,EAC9C,GACCyB,QAAQ,WACPhB,EAAqBjG,YAAcyG,CACrC,EACJ,GAIAjD,QAAQgF,IAAI,CD9JHtD,MAAM,GAADzD,OAAImB,EAAOC,QAAO,aAAa,CACzCC,QAASF,EAAOE,UAEjBM,KAAKJ,GAXCkC,MAAM,GAADzD,OAAImB,EAAOC,QAAO,UAAU,CACtCC,QAASF,EAAOE,UACfM,KAAKJ,KCqKPI,KAAK,SAAAoD,GAAmB,I,IAAAiC,G,EAAA,E,4CAAAjC,I,s1BAAjBkC,EAAID,EAAA,GAAEE,EAAKF,EAAA,GACjBhD,QAAQC,IAAI,uBAAwBgD,GACpCjD,QAAQC,IAAI,sBAAuBiD,GACnCA,EAAMhG,QAAQ,SAACxD,GACb,IAAMK,EAAcN,EAAQC,EAAUuJ,EAAKnI,IAAKlB,EAAcC,EAAiBwF,GAC/EpB,EAAUkF,OAAOpJ,EACnB,GAEAiF,EAAazE,YAAc0I,EAAKzI,KAChCyE,EAAmB1E,YAAc0I,EAAKxB,MAElCwB,EAAKN,SACPtC,EAAcwC,MAAMC,gBAAkB,QAAH9G,OAAWiH,EAAKN,OAAM,MAE7D,GACC7C,MAAM,SAACC,GACNC,QAAQC,IAAI,+BAAgCF,EAC9C,E","sources":["webpack://development/./src/components/card.js","webpack://development/./src/components/modal.js","webpack://development/./src/components/validation.js","webpack://development/./src/components/api.js","webpack://development/./src/components/index.js"],"sourcesContent":["const cardTemplate = document.querySelector('#card-template').content;\n\nexport function addCard(cardData, userId, handleDelete, handleOpenImage, handleLikeIconClick) {\n\n  const cardElement = cardTemplate.querySelector('.card').cloneNode(true);\n  const deleteButton = cardElement.querySelector('.card__delete-button');\n  const likeButton = cardElement.querySelector('.card__like-button');\n  const cardImage = cardElement.querySelector('.card__image');\n  const likesCount = cardElement.querySelector('.card__likes-counter');\n\n  cardImage.src = cardData.link;\n  cardElement.querySelector('.card__title').textContent = cardData.name;\n  cardImage.alt = cardData.name;\n\n  likesCount.textContent = cardData.likes.length;\n\n  const isLiked = cardData.likes.some((like) => like._id === userId);\n   if (isLiked) { \n    likeButton.classList.add('card__like-button_is-active');\n  }\n\n  if (cardData.owner._id !== userId) {\n    deleteButton.remove();\n  }\n   deleteButton.addEventListener('click', () => {\n  handleDelete(cardData._id, cardElement)\n});\n\n  likeButton.addEventListener('click', () => {\n    handleLikeIconClick(cardData._id, likeButton, likesCount);\n  }); \n\n  cardImage.addEventListener('click', () => {\n    handleOpenImage({\n      name: cardData.name,\n      link: cardData.link,\n  });\n  });\n\n  return cardElement;\n};\n\nexport const handleLikeIconClick = (toggleLike) => (cardID, likeButton, likesCount) => {\n  const isLiked = likeButton.classList.contains(\"card__like-button_is-active\"); // определяем окрашена ли уже карточка\n  toggleLike(cardID, !isLiked)\n    .then((cardData) => {\n      likeButton.classList.toggle(\"card__like-button_is-active\");\n      likesCount.textContent = cardData.likes.length;\n    })\n    .catch((err) => console.log(`Ошибка изменения статуса лайка: ${err}`));\n};\n\nconst updateLikes = (cardD, cardId, likeButton, likesCount) => {\n\n}\n\nexport function deleteCard (cardElement) {\n  cardElement.remove();\n};\n","const handleEscKeyUp = (evt) => {\n  if (evt.key === 'Escape') {\n    const openedPopup = document.querySelector('.popup_is-opened');\n    popupClose(openedPopup);\n    }\n  };\n  \n//общая функция закрытия попапа\nexport function popupClose(modalWindow) {\n  modalWindow.classList.remove('popup_is-opened');\n  document.removeEventListener('keydown', handleEscKeyUp);\n};\n\n//общая функция для показа модального окна\nexport function popupOpen(modalWindow) {\n  modalWindow.classList.add('popup_is-opened');\n  document.addEventListener('keydown', handleEscKeyUp);\n};\n\n//отдельная функция функцияЧтобыПовеситьСлушатели\nexport const functionAddEventListener = (popupElement) => {\n  const popupCloseButton = popupElement.querySelector('.popup__close');\n  popupCloseButton.addEventListener('click', () => {\n    popupClose(popupElement); \n  });\n\n  //закрываем попап по оверлэю\n  popupElement.addEventListener('mousedown', (evt) => {\n    if (evt.target.classList.contains('popup')) {\n      popupClose(popupElement)\n    }\n  });\n};","const showInputError = (formElement, inputElement, errorMessage, validationConfig) => {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n  inputElement.classList.add(validationConfig.inputErrorClass);\n  errorElement.textContent = errorMessage;\n  errorElement.classList.add(validationConfig.errorClass);\n};\n\nconst hideInputError = (formElement, inputElement, validationConfig) => {\n  // Находим элемент ошибки\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n  inputElement.classList.remove(validationConfig.inputErrorClass);\n  errorElement.classList.remove(validationConfig.errorClass);\n  errorElement.textContent = '';\n}; \n\nconst isValid = (formElement, inputElement, validationConfig) => {\n  inputElement.setCustomValidity(\"\");\n  if (inputElement.pattern && inputElement.validity.patternMismatch) {\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n  } else {\n    inputElement.setCustomValidity(\"\");\n  }\n\n  if (!inputElement.validity.valid) {\n    showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);\n  } else {\n    hideInputError(formElement, inputElement, validationConfig);\n  }\n console.log('Validation called', inputElement.validity);\n};\n \nconst hasInvalidInput = (inputList) => {\n  // проходим по этому массиву методом some\n  return inputList.some((inputElement) => {\n        // Если поле не валидно, колбэк вернёт true\n    // Обход массива прекратится и вся функция\n    // hasInvalidInput вернёт true\n\n    return !inputElement.validity.valid;\n  });\n}; \n\nconst toggleButtonState = (inputList, buttonElement, validationConfig) => {\n  // Если есть хотя бы один невалидный инпут\n  if (hasInvalidInput(inputList)) {\n    // сделай кнопку неактивной\n    buttonElement.disabled = true;\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\n  } else {\n    // иначе сделай кнопку активной\n    buttonElement.disabled = false;\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\n  }\n}; \n\nexport const setEventListener = (formElement, validationConfig) => {\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\n\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\n\n  toggleButtonState(inputList, buttonElement, validationConfig);\n\n  inputList.forEach((inputElement) => {\n    // каждому полю добавим обработчик события input\n    inputElement.addEventListener('input', () => {\n      isValid(formElement, inputElement, validationConfig);\n      toggleButtonState(inputList, buttonElement, validationConfig);\n    });\n  });\n}; \n\nexport const enableValidation = (validationConfig) => {\n  const formList = Array.from(document.querySelectorAll(validationConfig.formSelector))\n  .filter(form => !form.closest('.popup_type_delete-card'));\n  formList.forEach((formElement) => {\n    setEventListener(formElement, validationConfig);\n  });\n};\n\nexport const clearValidation = (formElement, validationConfig) => {\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\n\n  inputList.forEach((inputElement) => {\n    hideInputError(formElement, inputElement, validationConfig);\n  });\n\n  buttonElement.disabled = true;\n  buttonElement.classList.add(validationConfig.inactiveButtonClass);\n}\n\n","\nconst config = {\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-42',\n  headers: {\n    authorization: 'f3e009ea-6220-45c4-a844-9e477f4354fc',\n    'Content-Type': 'application/json'\n  }\n};\n\nfunction checkResponse(res) {\n  if (res.ok) {\n   return res.json();\n  }\n   return res.json()\n     .then((error) => {\n        error.httpResponseCode = res.status;\n        return Promise.reject(error);\n     }\n  )};\n\n//получение карточек с сервера (удалить предыдущий спрсоб AddCard)\nexport const getInitialCards = () => {\n  return fetch(`${config.baseUrl}/cards`, {\n    headers: config.headers\n  }).then(checkResponse)\n};\n\n\n//загрузка информации о пользователе с сервера\nexport const getUserData = () => {\n  return fetch(`${config.baseUrl}/users/me`, {\n    headers: config.headers\n  })\n  .then(checkResponse)\n};\n\n\n\n\n//обновление отредактированных данных профиля\nexport const updateProfile = ({name, about}) => {\n return fetch(`${config.baseUrl}/users/me`, {\n  method: 'PATCH',\n  headers: config.headers,\n  body: JSON.stringify({\n    name: name,\n    about: about\n  })\n})\n.then(checkResponse);\n};\n\n//добавление новой карточки\nexport const createNewCard = ({name, link}) => {\n  return fetch(`${config.baseUrl}/cards`, {\n    method: 'POST',\n    headers: config.headers,\n    body: JSON.stringify({\n    name: name,\n    link: link\n  })\n})\n.then(checkResponse);\n};\n\nexport const  toggleLike = (cardId, isLiked) => {\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\n    method: isLiked ? 'PUT' : 'DELETE',\n    headers: config.headers,\n  })\n  .then(checkResponse)\n};\n\nexport const deleteCard = (cardId) => {\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\n    method: 'DELETE',\n    headers: config.headers,\n  })\n  .then(checkResponse)\n  .then((data) => {\n   return data\n  })\n};\n\nexport const updateAvatar = (avatarLink) => {\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\n    method: 'PATCH',\n    headers: config.headers,\n    body: JSON.stringify({\n      avatar: avatarLink\n    })\n  })\n  .then(checkResponse)\n};","import '../pages/index.css';\nimport { addCard, handleLikeIconClick } from './card.js';\nimport { popupOpen } from './modal.js';\nimport { popupClose } from './modal.js';\nimport { functionAddEventListener } from './modal.js';\nimport { enableValidation } from './validation.js';\nimport { clearValidation } from './validation.js';\nimport { getInitialCards } from './api.js';\nimport { getUserData } from './api.js';\nimport { updateProfile } from './api.js';\nimport { createNewCard } from './api.js';\nimport { toggleLike } from './api.js';\nimport { deleteCard } from './api.js';\nimport { updateAvatar } from './api.js';\n\nconst cardsList = document.querySelector('.places__list');\nconst page = document.querySelector('.page__content');\nconst content = page.querySelector('.content');\nconst profile = content.querySelector('.profile');\nconst profileInfo = profile.querySelector('.profile__info');\nconst editButton = profileInfo.querySelector('.profile__edit-button');\nconst popupEdit = document.querySelector('.popup_type_edit');\nconst popupNewCard = document.querySelector('.popup_type_new-card');\nconst addButton = profile.querySelector('.profile__add-button');\nconst imagePopup = document.querySelector('.popup_type_image');\nconst popupImageOpened = imagePopup.querySelector('.popup__image');\nconst popupImageCaption = imagePopup.querySelector('.popup__caption');\nconst formProfile = document.forms['edit-profile'];\nconst inputNameFormProfile = formProfile.elements['name'];\nconst inputDescriptionFormProfile = formProfile.elements['description'];\nconst profileTitle = profileInfo.querySelector('.profile__title');\nconst profileDescription = profileInfo.querySelector('.profile__description');\nconst formAddNewCard = document.forms['new-place'];\nconst inputPlaceNameFormAddNewCard = formAddNewCard.elements['place-name'];\nconst inputlinkFormAddNewCard = formAddNewCard.elements['link'];\nconst onLikeClick = handleLikeIconClick(toggleLike);\nconst popupAvatar = document.querySelector('.popup_type_avatar');\nconst avatarEditButton = document.querySelector('.profile__image-edit-button');\nconst formAvatar = document.forms['avatar-form'];\nconst inputAvatar = formAvatar.elements['link-avatar'];\nconst profileAvatar = document.querySelector('.profile__image');\nconst popupDeleteCard = document.querySelector('.popup_type_delete-card');\nconst saveButtonFormProfile = formProfile.querySelector('.popup__button');\nconst saveButtonFormAddNewCard = formAddNewCard.querySelector('.popup__button');\nconst saveButtonformAvatar = formAvatar.querySelector('.popup__button');\n\nfunction handleOpenImage({ name, link }) {\n  popupImageOpened.src = link;\n  popupImageOpened.alt = name;\n  popupImageCaption.textContent = name;\n  popupOpen(imagePopup);\n};\n\nconst handleDelete = (cardId, cardElement) => {\n  deleteCard(cardId)\n    .then(() => {\n      cardElement.remove()\n    })\n    .catch((err) => {\n      console.log('Ошибка. Запрос не выполнен: ', err);\n    });\n};\n\n//функция редактирования (попап редактирования профиля)\nfunction handleFormProfileSubmit(evt) {\n  evt.preventDefault();\n\n  const initialText = saveButtonFormProfile.textContent;\n  saveButtonFormProfile.textContent = 'Сохранение...';\n\n  updateProfile({ name: inputNameFormProfile.value, about: inputDescriptionFormProfile.value })\n    .then((updatedProfile) => {\n      profileTitle.textContent = updatedProfile.name;\n      profileDescription.textContent = updatedProfile.about;\n      popupClose(popupEdit);\n    })\n    .catch((err) => {\n      console.log('Ошибка. Запрос не выполнен: ', err);\n    })\n    .finally(() => {\n      saveButtonFormProfile.textContent = initialText;\n    });\n};\n\nfunction handleFormAddNewCard(evt) {\n  evt.preventDefault();\n\n  const initialText = saveButtonFormAddNewCard.textContent;\n  saveButtonFormAddNewCard.textContent = 'Сохранение...';\n\n  createNewCard({ name: inputPlaceNameFormAddNewCard.value, link: inputlinkFormAddNewCard.value })\n    .then((newCardData) => {\n      const newCard = addCard(newCardData, newCardData.owner._id, handleDelete, handleOpenImage, onLikeClick);\n      cardsList.prepend(newCard);\n      popupClose(popupNewCard);\n      formAddNewCard.reset();\n    })\n    .catch((err) => {\n      console.log('Ошибка. Запрос не выполнен: ', err);\n    })\n    .finally(() => {\n      saveButtonFormAddNewCard.textContent = initialText;\n    })\n};\n\n//открываем попап редактирования профиля с инпутами из разметки\neditButton.addEventListener('click', () => {\n  // Возьмём данные из разметки и запишем в инпуты \n  inputNameFormProfile.value = profileTitle.textContent;\n  inputDescriptionFormProfile.value = profileDescription.textContent;\n  clearValidation(formProfile, {\n    formSelector: '.popup__form',\n    inputSelector: '.popup__input',\n    submitButtonSelector: '.popup__button',\n    inactiveButtonClass: 'popup__button_disabled',\n    inputErrorClass: 'popup__input_type_error',\n    errorClass: 'popup__error_visible'\n  });\n  popupOpen(popupEdit);\n});\n\nformAddNewCard.addEventListener('submit', handleFormAddNewCard);\n\n//слушатель, чтобы отркыть попап - создания новой карточки\naddButton.addEventListener('click', () => {\n  popupOpen(popupNewCard);\n  formAddNewCard.reset();\n  clearValidation(formAddNewCard, {\n    formSelector: '.popup__form',\n    inputSelector: '.popup__input',\n    submitButtonSelector: '.popup__button',\n    inactiveButtonClass: 'popup__button_disabled',\n    inputErrorClass: 'popup__input_type_error',\n    errorClass: 'popup__error_visible'\n  });\n});\n\n//обработчик отправки формы (редактировать профиль)\nformProfile.addEventListener('submit', handleFormProfileSubmit);\n\nArray.from(document.querySelectorAll('.popup')).forEach(popup => {\n  popup.classList.add('.popup_is-animated');\n  functionAddEventListener(popup);\n});\n\nenableValidation({\n  formSelector: '.popup__form',\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__button',\n  inactiveButtonClass: 'popup__button_disabled',\n  inputErrorClass: 'popup__input_type_error',\n  errorClass: 'popup__error_visible'\n});\n\nprofileAvatar.addEventListener('click', () => {\n  formAvatar.reset();\n  clearValidation(formAvatar, {\n    formSelector: '.popup__form',\n    inputSelector: '.popup__input',\n    submitButtonSelector: '.popup__button',\n    inactiveButtonClass: 'popup__button_disabled',\n    inputErrorClass: 'popup__input_type_error',\n    errorClass: 'popup__error_visible'\n  });\n  popupOpen(popupAvatar);\n});\n\nfunction handleAvatarSubmit(evt) {\n  evt.preventDefault();\n\n  const initialText = saveButtonformAvatar.textContent;\n  saveButtonformAvatar.textContent = 'Сохранение...';\n\n  updateAvatar(inputAvatar.value)\n    .then((userData) => {\n      profileAvatar.style.backgroundImage = `url('${userData.avatar}')`;\n      popupClose(popupAvatar);\n    })\n    .catch(err => {\n      console.error('Ошибка обновления аватара:', err);\n    })\n    .finally(() => {\n      saveButtonformAvatar.textContent = initialText;\n    });\n}\n\nformAvatar.addEventListener('submit', handleAvatarSubmit);\n\nPromise.all([getUserData(), getInitialCards()])\n  .then(([user, cards]) => {\n    console.log('Данные пользователя:', user);\n    console.log('Полученные карточки', cards);\n    cards.forEach((cardData) => {\n      const cardElement = addCard(cardData, user._id, handleDelete, handleOpenImage, onLikeClick);\n      cardsList.append(cardElement);\n    });\n\n    profileTitle.textContent = user.name;\n    profileDescription.textContent = user.about;\n\n    if (user.avatar) {\n      profileAvatar.style.backgroundImage = `url('${user.avatar}')`;\n    }\n  })\n  .catch((err) => {\n    console.log('Ошибка. Запрос не выполнен: ', err);\n  });\n\n"],"names":["cardTemplate","document","querySelector","content","addCard","cardData","userId","handleDelete","handleOpenImage","handleLikeIconClick","cardElement","cloneNode","deleteButton","likeButton","cardImage","likesCount","src","link","textContent","name","alt","likes","length","some","like","_id","classList","add","owner","remove","addEventListener","handleEscKeyUp","evt","key","popupClose","modalWindow","removeEventListener","popupOpen","hideInputError","formElement","inputElement","validationConfig","errorElement","concat","id","inputErrorClass","errorClass","toggleButtonState","inputList","buttonElement","validity","valid","hasInvalidInput","disabled","inactiveButtonClass","clearValidation","Array","from","querySelectorAll","inputSelector","submitButtonSelector","forEach","config","baseUrl","headers","authorization","checkResponse","res","ok","json","then","error","httpResponseCode","status","Promise","reject","cardsList","profile","profileInfo","editButton","popupEdit","popupNewCard","addButton","imagePopup","popupImageOpened","popupImageCaption","formProfile","forms","inputNameFormProfile","elements","inputDescriptionFormProfile","profileTitle","profileDescription","formAddNewCard","inputPlaceNameFormAddNewCard","inputlinkFormAddNewCard","onLikeClick","cardID","cardId","isLiked","fetch","method","toggleLike","contains","toggle","catch","err","console","log","popupAvatar","formAvatar","inputAvatar","profileAvatar","saveButtonFormProfile","saveButtonFormAddNewCard","saveButtonformAvatar","_ref","data","deleteCard","value","formSelector","preventDefault","_ref2","initialText","body","JSON","stringify","newCardData","newCard","prepend","reset","finally","about","updatedProfile","popup","popupElement","target","filter","form","closest","setCustomValidity","pattern","patternMismatch","dataset","errorMessage","showInputError","validationMessage","isValid","setEventListener","avatarLink","avatar","userData","style","backgroundImage","all","_ref3","user","cards","append"],"sourceRoot":""}